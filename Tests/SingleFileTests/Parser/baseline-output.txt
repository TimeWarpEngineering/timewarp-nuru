=== test-analyzer-patterns.cs ===
Testing Route Pattern Analyzer Scenarios
========================================

Each test shows an invalid pattern and its corrected version.
These correspond to analyzer diagnostics NURU001-NURU009.


NURU001: Invalid parameter syntax
  Use curly braces {} for parameters, not angle brackets <>
  ✗ Invalid: 'deploy <env>' - Error: Invalid route pattern 'deploy <env>': 
  ✓ Valid:   'deploy {env}' - Parses correctly

NURU001: Multiple invalid parameters
  All parameters must use curly braces
  ✗ Invalid: 'copy <source> <dest>' - Error: Invalid route pattern 'copy <source> <dest>': 
  ✓ Valid:   'copy {source} {dest}' - Parses correctly

NURU002: Missing closing brace
  Close all parameter braces
  ✗ Invalid: 'deploy {env' - Error: Invalid route pattern 'deploy {env': 
  ✓ Valid:   'deploy {env}' - Parses correctly

NURU002: Missing opening brace
  Open all parameter braces
  ✗ Invalid: 'build config}' - Error: Invalid route pattern 'build config}': 
  ✓ Valid:   'build {config}' - Parses correctly

NURU002: Nested unbalanced braces
  Parameters cannot be nested
  ✗ Invalid: 'test {param{nested}' - Error: Invalid route pattern 'test {param{nested}': 
  ✓ Valid:   'test {param}' - Parses correctly

NURU003: Single dash with word
  Long options need double dash (--verbose) or use short form (-v)
  ✗ Invalid: 'test -verbose' - Error: Invalid route pattern 'test -verbose': 
  ✓ Valid:   'test --verbose' - Parses correctly

NURU003: Missing dashes
  Options must start with dashes
  ✗ Invalid: 'build config release' - UNEXPECTED: Pattern parsed successfully!
  ✓ Valid:   'build --config release' - Parses correctly

NURU004: Unknown type
  Valid types: string, int, double, bool, DateTime, Guid, long, float, decimal
  ✗ Invalid: 'get {id:invalid}' - Error: Invalid route pattern 'get {id:invalid}': 
  ✓ Valid:   'get {id:int}' - Parses correctly

NURU004: Misspelled type
  Use 'int' not 'integer'
  ✗ Invalid: 'wait {seconds:integer}' - Error: Invalid route pattern 'wait {seconds:integer}': 
  ✓ Valid:   'wait {seconds:int}' - Parses correctly

NURU004: Case sensitive type
  Type names are case-sensitive (DateTime not datetime)
  ✗ Invalid: 'parse {date:datetime}' - Error: Invalid route pattern 'parse {date:datetime}': 
  ✓ Valid:   'parse {date:DateTime}' - Parses correctly

NURU005: Catch-all in middle
  Catch-all parameter must be last
  ✗ Invalid: 'docker {*args} {command}' - Error: Invalid route pattern 'docker {*args} {command}': 
  ✓ Valid:   'docker {command} {*args}' - Parses correctly

NURU005: Multiple parameters after catch-all
  Nothing can come after catch-all parameter
  ✗ Invalid: 'exec {*args} {env} {user}' - Error: Invalid route pattern 'exec {*args} {env} {user}': 
  ✓ Valid:   'exec {env} {user} {*args}' - Parses correctly

NURU006: Same parameter twice
  Each parameter must have a unique name
  ✗ Invalid: 'copy {file} {file}' - Error: Invalid route pattern 'copy {file} {file}': 
  ✓ Valid:   'copy {source} {destination}' - Parses correctly

NURU006: Duplicate with different positions
  Parameter names must be unique across the entire route
  ✗ Invalid: 'move {path} to {path}' - Error: Invalid route pattern 'move {path} to {path}': 
  ✓ Valid:   'move {source} to {destination}' - Parses correctly

NURU007: Multiple optional in sequence
  Only the last parameter in a sequence can be optional
  ✗ Invalid: 'backup {src?} {dst?}' - Error: Invalid route pattern 'backup {src?} {dst?}': 
  ✓ Valid:   'backup {src} {dst?}' - Parses correctly

NURU007: Optional before required
  Optional parameters must come after required ones
  ✗ Invalid: 'deploy {env?} {version}' - UNEXPECTED: Pattern parsed successfully!
  ✓ Valid:   'deploy {env} {version?}' - Parses correctly

NURU008: Optional before catch-all
  Cannot mix optional parameters with catch-all
  ✗ Invalid: 'exec {cmd?} {*args}' - Error: Invalid route pattern 'exec {cmd?} {*args}': 
  ✓ Valid:   'exec {cmd} {*args}' - Parses correctly

NURU008: Multiple optional with catch-all
  Remove optional markers when using catch-all
  ✗ Invalid: 'run {script?} {env?} {*args}' - Error: Invalid route pattern 'run {script?} {env?} {*args}': 
  ✓ Valid:   'run {script} {env} {*args}' - Parses correctly

NURU009: Duplicate short form
  Don't duplicate short option forms
  ✗ Invalid: 'test --verbose,-v,-v' - Error: Invalid route pattern 'test --verbose,-v,-v': 
  ✓ Valid:   'test --verbose,-v' - Parses correctly

NURU009: Multiple same aliases
  Each short form should appear only once
  ✗ Invalid: 'build --output,-o,-o,-o {path}' - Error: Invalid route pattern 'build --output,-o,-o,-o {path}': 
  ✓ Valid:   'build --output,-o {path}' - Parses correctly

Summary: Tested all 9 analyzer diagnostic scenarios
These patterns help ensure the analyzer catches common mistakes

=== test-hanging-patterns.cs ===
Testing for hanging patterns with NURU_DEBUG=true...
Each pattern has a 5-second timeout

=== Testing patterns that HANG ===

============================================================
Testing: 'build config}' - Pattern with closing brace but no opening
============================================================
  Result: Error: Invalid route pattern 'build config}': 

============================================================
Testing: 'deploy }' - Pattern with only closing brace
============================================================
  Result: Error: Invalid route pattern 'deploy }': 

============================================================
Testing: 'test {a{b}}' - Nested braces
============================================================
  Result: Error: Invalid route pattern 'test {a{b}}': 

=== Testing patterns that work correctly ===

============================================================
Testing: 'test {' - Pattern with opening brace but no closing
============================================================
  Result: Error: Invalid route pattern 'test {': 

============================================================
Testing: '{{test}}' - Pattern with double braces
============================================================
  Result: Error: Invalid route pattern '{{test}}': 

============================================================
Testing: '{}' - Empty parameter
============================================================
  Result: Error: Invalid route pattern '{}': 

============================================================
Testing: 'build --config {' - Option with unclosed parameter
============================================================
  Result: Error: Invalid route pattern 'build --config {': 

============================================================
Testing: 'test {param' - Parameter without closing at end
============================================================
  Result: Error: Invalid route pattern 'test {param': 

All tests completed!

=== test-hanging-patterns-fixed.cs ===
Verifying all hanging patterns are fixed...

Testing 'build config}' (Closing brace without opening): ✓ Error: Error at position 12: Unexpected '}' - closing brace without matching opening brace
Testing 'deploy }' (Solo closing brace): ✓ Error: Error at position 7: Unexpected '}' - closing brace without matching opening brace
Testing 'test {a{b}}' (Nested braces): ✓ Error: Error at position 7: Expected '}'
Error at position 10: Unexpected '}' - closing brace without matching opening brace
Testing '{{test}}' (Double braces): ✓ Error: Error at position 1: Expected parameter name
Error at position 7: Unexpected '}' - closing brace without matching opening brace

All patterns now fail gracefully with proper error messages!

=== test-specific-hanging.cs ===
__________________________________________________
Project "/home/steventcramer/worktrees/github.com/TimeWarpEngineering/timewarp-nuru/Cramer-2025-08-30-dev/Tests/SingleFileTests/Parser/test-specific-hanging.csproj" (Build;ComputeRunArguments target(s)):

/home/steventcramer/worktrees/github.com/TimeWarpEngineering/timewarp-nuru/Cramer-2025-08-30-dev/Tests/SingleFileTests/Parser/test-specific-hanging.cs(28,1): error CA1031: Modify '<Main>$' to catch a more specific allowed exception type, or rethrow the exception (https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1031)
Done building project "test-specific-hanging.csproj" -- FAILED.

The build failed. Fix the build errors and run again.

=== test-parser-errors.cs ===
Testing new route pattern parser:

✓ 'status' parsed successfully
✓ 'git commit' parsed successfully
✓ 'deploy {env}' parsed successfully
✓ 'deploy {env} {tag?}' parsed successfully
✓ 'delay {ms:int}' parsed successfully
✓ 'docker {*args}' parsed successfully
✓ 'build --verbose' parsed successfully
✓ 'build --config {mode}' parsed successfully
Testing pattern with description and option aliases...
✓ 'deploy {env|Environment} --dry-run,-d|Preview' parsed successfully
Done with complex pattern.

Testing invalid patterns:

✗ 'prompt <input>' failed:
  Invalid route pattern 'prompt <input>': 
  Error at position 7: Invalid parameter syntax '<input>'. Use curly braces for parameters. (Suggestion: {input})
✗ 'deploy {env' failed:
  Invalid route pattern 'deploy {env': 
  Error at position 11: Expected '}'
✗ 'build --config {' failed:
  Invalid route pattern 'build --config {': 
  Error at position 16: Expected parameter name

