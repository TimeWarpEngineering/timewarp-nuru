{
  "version": "1.0",
  "description": "TimeWarp.Nuru example manifest for MCP server dynamic discovery",
  "examples": [
    {
      "id": "basic",
      "name": "Mixed Calculator Example",
      "description": "Calculator mixing Delegate and Mediator patterns - best of both worlds",
      "path": "Samples/Calculator/calc-mixed.cs",
      "tags": ["basics", "routing", "getting-started", "calculator", "mixed"],
      "difficulty": "beginner"
    },
    {
      "id": "mixed",
      "name": "Mixed Pattern Calculator",
      "description": "Mixed approach combining delegate performance with mediator structure",
      "path": "Samples/Calculator/calc-mixed.cs",
      "tags": ["calculator", "mixed", "delegate", "mediator"],
      "difficulty": "intermediate"
    },
    {
      "id": "delegate",
      "name": "Delegate Calculator",
      "description": "Pure delegate routing for maximum performance with no DI overhead",
      "path": "Samples/Calculator/calc-delegate.cs",
      "tags": ["calculator", "delegate", "performance", "minimal"],
      "difficulty": "beginner"
    },
    {
      "id": "mediator",
      "name": "Mediator Calculator",
      "description": "Mediator pattern with DI for testability and enterprise patterns",
      "path": "Samples/Calculator/calc-mediator.cs",
      "tags": ["calculator", "mediator", "dependency-injection", "enterprise"],
      "difficulty": "intermediate"
    },
    {
      "id": "async",
      "name": "Async Command Examples",
      "description": "Demonstrates async command handlers with Task-based routes and async/await patterns",
      "path": "Samples/AsyncExamples/Program.cs",
      "tags": ["async", "tasks", "advanced"],
      "difficulty": "intermediate"
    },
    {
      "id": "console-logging",
      "name": "Console Logging Integration",
      "description": "Shows how to integrate Microsoft.Extensions.Logging with console output",
      "path": "Samples/Logging/ConsoleLogging.cs",
      "tags": ["logging", "console", "diagnostics"],
      "difficulty": "beginner"
    },
    {
      "id": "serilog",
      "name": "Serilog Integration",
      "description": "Demonstrates Serilog integration with structured logging and trace-level output",
      "path": "Samples/Logging/SerilogLogging.cs",
      "tags": ["logging", "serilog", "structured-logging", "diagnostics"],
      "difficulty": "intermediate"
    }
  ]
}