<Project>

  <!-- Custom path definitions for repository structure -->
  <PropertyGroup Label="Custom Repository Variables">
    <RepositoryName>timewarp-nuru</RepositoryName>
    <RepositoryRoot>$(MSBuildThisFileDirectory)</RepositoryRoot>
    <SourceDirectory>$(RepositoryRoot)Source/</SourceDirectory>
    <TestsDirectory>$(RepositoryRoot)Tests/</TestsDirectory>
    <SamplesDirectory>$(RepositoryRoot)Samples/</SamplesDirectory>
    <ArtifactsDirectory>$(RepositoryRoot)artifacts/</ArtifactsDirectory>
    <SolutionFile>$(RepositoryRoot)TimeWarp.Nuru.sln</SolutionFile>
    <LocalNuGetFeed>$(ArtifactsDirectory)packages/</LocalNuGetFeed>
    <LocalNuGetCache>$(RepositoryRoot)LocalNuGetCache/</LocalNuGetCache>
  </PropertyGroup>

  <!-- MSBuild and NuGet behavior configuration -->
  <PropertyGroup Label="MSBuild/NuGet Configuration">
    <!-- Enable Central Package Management -->
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>

    <!-- Enable package generation on build -->
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>

    <!-- Output packages to our local feed directory -->
    <PackageOutputPath>$(LocalNuGetFeed)</PackageOutputPath>

    <!-- Use local packages directory instead of global cache -->
    <RestorePackagesPath>$(LocalNuGetCache)</RestorePackagesPath>

    <!-- Suppress .NET preview SDK message -->
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
  </PropertyGroup>

  <!-- Default package metadata (can be overridden in individual projects) -->
  <PropertyGroup Label="Package Metadata">
    <Version>2.1.0-beta.13</Version>
    <Authors>Steven T. Cramer</Authors>
    <RepositoryUrl>https://github.com/TimeWarpEngineering/timewarp-nuru</RepositoryUrl>
    <PackageLicenseExpression>Unlicense</PackageLicenseExpression>
    <PackageIcon>Logo.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <!-- Default language and framework settings for all projects -->
  <PropertyGroup Label="Project Defaults">
    <TargetFramework>net10.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <!-- Code quality, analyzers, and warning configuration -->
  <PropertyGroup Label="Code Quality and Analysis">
    <!-- Treat all warnings as errors -->
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <WarningLevel>5</WarningLevel>

    <!-- Enable code style enforcement during build -->
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>

    <!-- Enable all analyzers with latest rules -->
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisMode>All</AnalysisMode>
    <AnalysisLevel>latest-all</AnalysisLevel>

    <!-- Report analyzer diagnostics in build output -->
    <ReportAnalyzer>true</ReportAnalyzer>

    <!-- Fail build on analyzer warnings (consistent with TreatWarningsAsErrors) -->
    <CodeAnalysisTreatWarningsAsErrors>true</CodeAnalysisTreatWarningsAsErrors>

    <!-- Suppress specific warnings -->
    <!-- CA1014: CLS compliance not required for this library -->
    <!-- CA1724: Type name conflicts (acceptable in this context) -->
    <!-- CA1812: False positives for DI-instantiated classes -->
    <!-- IL2026, IL2067, IL2070, IL2075, IL3050, IL2104, IL3053: AOT warnings (not yet implemented) -->
    <NoWarn>$(NoWarn);CA1014;CA1724;CA1812;IL2026;IL2067;IL2070;IL2075;IL3050;IL2104;IL3053</NoWarn>
  </PropertyGroup>

  <!-- Code analyzers applied to all projects -->
  <ItemGroup Label="Code Analyzers">
    <PackageReference Include="Roslynator.Analyzers" PrivateAssets="all" />
    <PackageReference Include="Roslynator.CodeAnalysis.Analyzers" PrivateAssets="all" />
    <PackageReference Include="Roslynator.Formatting.Analyzers" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.CodeStyle" PrivateAssets="all" />
  </ItemGroup>

</Project>